{"name":"System App","tagline":"A sleek and smart infrastructure mapping and monitoring tool by Zalando.","body":"# System App - Readme\r\n\r\nSystem monitoring and infrastructure mapping app by Zalando.\r\n\r\n### The master tips\r\n\r\n- This app depends on Node.js and MongoDB. The default port is set to 3003, make sure firewall is properly set.\r\n- ALL client side settings (database conn string, ports, etc) are located on `/assets/js/settings.coffee`.\r\n- ALL server side settings (timers, colors, prefixes, etc) are located on `/server/settings.coffee`.\r\n- You MUST be familiar with CoffeeScript, Backbone.js, jQuery and Raphaël to fully understand the app.\r\n- If something goes really weird with the UI, refreshing the page (refresh button or F5) will solve most problems.\r\n\r\n## Installation\r\n\r\nFelling lazy? Simply run the `./install.sh` script and it will try to do all the hard work for you.\r\nIt should work on Linux and OS X environments.\r\n\r\n1.  Download the `./install.sh` and save it on the directory where you want to install the *System App*.\r\n    <http://github.com/zalando/system/raw/master/install.sh>\r\n\r\n2.  Make it executable.\r\n    `$ chmod +x install.sh`\r\n\r\n3.  Run it as root and hope for the best :-)\r\n    `$ sudo ./install.sh`\r\n\r\nThe script should tell you what's missing and ask if you want to install the missing dependencies.\r\nAs easy as just choosing \"Yes\" for everything.\r\n\r\n### Installing manually\r\n\r\nIf the install script doesn't work or if you prefer to do stuff manually, please make sure\r\nyou have installed on your system.\r\n\r\n- Node.js (http://nodejs.org)\r\n- MongoDB (http://mongodb.org)\r\n- ImageMagick (http://www.imagemagick.org)\r\n\r\nTo install Node.js on Linux, please check:\r\n<http://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager>\r\n\r\nMongoDB can be downloaded from:\r\n<http://www.mongodb.org/downloads>\r\n\r\nImageMagick is necessary to generate map thumbnails. The app will actually run without it,\r\nbut then you won't have a \"preview\" of each map on the start screen.\r\nTo download ImageMagick go to:\r\n<http://www.imagemagick.org/script/binary-releases.php>\r\n\r\nIf you want to keep the documentation up-to-date, you'll need Zocco:\r\n<http://github.com/zalando/zocco>\r\n\r\n### Required Node.js modules\r\n\r\nThe following Node.js modules are required by the *System App*.\r\n\r\n- async\r\n- coffee-script\r\n- connect-assets\r\n- express\r\n- imagemagick\r\n- jade\r\n- mongoskin\r\n- socket.io\r\n- stylus\r\n- winston\r\n\r\nThe easiest way to get these is by running NPM install:\r\n\r\n`$ npm install`\r\n\r\nBut in case you want to install any of these modules globally, use:\r\n\r\n`$ npm install -g module_name`\r\n\r\nIt's up to you to decide what should be installed globally and what should be local.\r\nAny combination should work fine. We prefer going local.\r\n\r\n### Avoiding MongoDB installation\r\n\r\nIf you don't want to install and configure MongoDB locally, we suggest creating a free online\r\ndatabase at MongoLab (http://mongolab.com). The connection string will be something like:\r\n\r\n`mongodb://your_user:your_password@ds033187.mongolab.com:33187/your_database?auto_reconnect`\r\n\r\n## Configuring the server\r\n\r\nAll server configuration settings are located on the file `server/settings.coffee`.\r\nThe following `System.Settings` keys will certainly need your attention:\r\n\r\n##### Settings.General\r\nChange the `appTitle` and set your desired title. Something like \"MyCompany System\".\r\nMake sure the `debug` is set to false before you deploy the app to production!\r\n\r\n##### Settings.Database.connString\r\nThe MongoDB connection string. If you have MongoDB installed locally with no user and password,\r\nthe default should work fine.\r\n\r\n##### Settings.Paths (all)\r\nThe default paths should work unless you have very specific restrictions on your environment.\r\nEdit these values in case you need to save or fetch data from different folders,\r\nfor example saving the app logs on a global \"/logs\" location.\r\n\r\n##### Settings.Web.defaultPort\r\nPort used by Node.js. The default 3003 should work fine if you have no firewall rules.\r\n\r\n## Starting the server\r\n\r\nTo start the *System App*:\r\n\r\n`$ coffee server.coffee`\r\n\r\nThis will start Node.js under the port 3003 (or whatever port you have set on `Settings.Web.defaultPort`).\r\nIn case you don't have installed the module *coffee-script* globally, you'll have to run it from within the\r\nnode_modules directory, like this:\r\n\r\n`$ ./node_modules/coffee-script/bin/coffee server.coffee`\r\n\r\nIf it throws an error or if you can't access the app on the browser then you might have something wrong\r\non your `server/settings.coffee` file, or a firewall issue.\r\n\r\n### Production vs. Debugging\r\n\r\nBy default Node.js will run in \"Debug mode\". If you're deploying and running on production,\r\nyou must set the `NODE_ENV` to \"production\" to avoid having all the debugging statements\r\nlogged to the console. Putting it simple:\r\n\r\n`$ NODE_ENV=production coffee server.coffee`\r\n\r\nPlease note that the *System App* will enter debug mode automatically when it runs under\r\nthe `localhost` hostname. In debug mode, most actions and procedures will be logged to the\r\nconsole, both on the server and the client side.\r\n\r\n### Running the server \"forever\"\r\n\r\nIf you want the server to run like a service (so it restarts itself in case of crash / error / termination)\r\nwe recommend using the node module *forever*. You can install it using NPM globally like this:\r\n\r\n`$ sudo npm install -g forever`\r\n\r\nTo start *System* using *forever*, run it under the app root folder:\r\n\r\n`$ forever start -c coffee server.coffee`\r\n\r\n## Code implementation\r\n\r\nTo make things easier to understand:\r\n\r\n* All customizable settings are available on the *System.Settings* object, at the `/assets/js/settings.coffee` file.\r\n* Non-HTML messages are set under the *System.Messages* object, file `/assets/js/messagess.coffee`.\r\n* URL routes are set under a *System.Routes* object, file `/assets/js/routes.coffee`.\r\n\r\n*System* uses the latest version of [Backbone](http://http://backbonejs.org/) to implement models, collections and views.\r\nThe maps are implemented using SVG and handled mainly by [Raphaël](http://raphaeljs.com/). Other required libraries are\r\n[jQuery](http://jquery.com/), [Underscore](http://underscorejs.org/), [JSONPath](http://goessner.net/articles/JsonPath/).\r\n\r\nHaving experience with the aforementioned libraries is not strictly necessary, but highly desirable in\r\ncase you want to customize the *System App*.\r\n\r\n### Models and collections\r\n\r\nModels won't inherit directly from Backbone.Model. Instead we're using our own [System.BaseModel](base.html),\r\nwhich extends Backbone's model with special methods like `save`, `generateId`, etc. Same thing\r\nfor collections, which should inherit from [System.BaseCollection](base.html).\r\n\r\nAll models are located under the folder `/assets/js/models`, and each model has its own specific collection\r\nimplemented at the end of the same file.\r\n\r\n### Views\r\n\r\nThe views are composed of:\r\n\r\n* HTML template using [Jade](http://jade-lang.com/), folder `/views`.\r\n* CSS styles using [Stylus](http://learnboost.github.com/stylus/), folder `/assets/css`.\r\n* View controllers implemented with CoffeeScript, folder `/assets/js/view`.\r\n\r\nJust like models and collections, the app has its own [System.BaseView](baseView.html)\r\nwhich extends Backbone's view with extra helpers and utilities.\r\n\r\n### Database\r\n\r\n*System* uses MongoDB to store its data, having the following collections:\r\n\r\n* *map* - stores all maps (Map model) including their referenced shapes and links.\r\n* *entity* - store entity schemas (EntityDefinition model) and data (EntityObject model).\r\n* *auditdata* - store all audit data definitions and data (AuditData model).\r\n* *auditevent* - store all audit events and alerts (AuditEvent model).\r\n* *variable* - stores custom JS variables (Variable model) created by users.\r\n* *log* - logs all updates, inserts and deletes on the collections above.\r\n\r\nThe \"log\" collection is implemented for increased security and damage control. All updates, inserts\r\nand deletions are logged there, and these records stay saved for 2 hours by default - you can\r\nchange this setting on the [Server Settings](server/settings.html) file. As the logs\r\nare stored in a separate collection and saved in async mode, performance stays roughly the same.\r\n\r\n## Common questions and answers\r\n\r\n#### Which browsers are supported?\r\nDue to its pure-and-sleek-javascript-web-app nature, we recommend *Google Chrome* and in fact this is\r\nthe only browser that we use while developing and testing *System*. But as the app follows all major\r\nweb standards (HTML5, CSS3, SVG etc...), FireFox and Opera *should* work fine as well. If you want\r\nto use IE, well... good luck with that.\r\n\r\n#### Missing shapes to the map, shadows on incorrect placements, links not being saved... something's wrong!\r\nThe quick-and-dirty answer is: reload the page. The long answer: *System* depends on third-party\r\nlibraries and getting these libraries to work in sync together proved to be more challenging than\r\nexpected. We are working *hard* to pinpoint all these failures and get rid of them with our own\r\npatches. But till we get there, if something weird happens refreshing the page will likely solve the problem.\r\n\r\n#### Sometimes there's an asterisk * next to the shapes title. Why?\r\nWhen you change the \"Shape's title\" dropdown (on the right bar > Map View), it will bind the selected\r\nvalue to the all shape titles. But sometimes the shape might not have that specific property,\r\nso in this case the default property will get bound and that asterisk will be shown.\r\n\r\n## Need help?\r\n\r\nCheck the readme again! And then if you REALLY still need help please get in touch with Igor: igor.ramadas@zalando.de\r\n\r\n*Have fun!*\r\n\r\n*Documentation generated generated with [Zocco](http://zalando.github.com/zocco/)!*\r\n```\r\nzocco -o public/docs `find . \\( -name \"*.coffee\" ! -path \"*node_modules*\" \\)`\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}